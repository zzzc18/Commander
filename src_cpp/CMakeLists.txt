cmake_minimum_required(VERSION 3.0)
project(cpp_for_lua)
if (CMAKE_HOST_WIN32)
    set(WINDOWS 1)
elseif(CMAKE_HOST_APPLE)
    set(MACOS 1)
elseif(CMAKE_HOST_UNIX)
    set(LINUX 1)
endif()
set(CMAKE_CXX_STANDARD 17)
#find include path
include_directories(include)
if(WINDOWS)
    find_package(Lua51 REQUIRED)
    include_directories(${LUA_INCLUDE_DIR})
    #position of .dll file
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/../lib)
elseif(LINUX)
    #position of .so file
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${PROJECT_SOURCE_DIR}/../lib)
endif()
#add source files to variable xxx_SOURCE_FILES
aux_source_directory(GameMap GameMap_SOURCE_FILES)
aux_source_directory(System System_SOURCE_FILES)
aux_source_directory(Verify Verify_SOURCE_FILES)
#generate .so/.dll files
add_library(GameMap SHARED ${GameMap_SOURCE_FILES})
add_library(System SHARED ${System_SOURCE_FILES})
add_library(Verify SHARED ${Verify_SOURCE_FILES})
if(WINDOWS)
    target_link_libraries(Verify ${LUA_LIBRARIES})
    target_link_libraries(GameMap Verify ${LUA_LIBRARIES})
    target_link_libraries(System GameMap ${LUA_LIBRARIES})
elseif(LINUX)
    target_link_libraries(GameMap Verify)
    target_link_libraries(System GameMap)
endif()
#change name: e.g. libmat.so->lib_mat.so
set_target_properties(GameMap System Verify PROPERTIES PREFIX "")
